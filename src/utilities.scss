@use 'variables.scss' as *;
@use 'app.scss';

// Mixins
@mixin position($pos) {
	position: $pos;
}

@mixin spacing($property, $value) {
	#{$property}: $value;
}

@mixin grid-template($type, $count) {
	grid-template-#{$type}: repeat($count, minmax(0, 1fr));
}

@mixin col-span($span) {
	grid-column: span $span;
}

@mixin gap($size) {
	gap: $size;
}

// Position Utilities
.absolute {
	@include position(absolute);
}

.fixed {
	@include position(fixed);
}

.relative {
	@include position(relative);
}

.top-0 {
	top: 0;
}

.bottom-0 {
	bottom: 0;
}

.left-0 {
	left: 0;
}

.right-0 {
	right: 0;
}

// Flexbox Utilities
.flex {
	display: flex;
}

.flex-row {
	flex-direction: row;
}

.flex-row-reverse {
	flex-direction: row-reverse;
}

.flex-col {
	flex-direction: column;
}

.flex-col-reverse {
	flex-direction: column-reverse;
}

.items-start {
	align-items: flex-start;
}

.items-center {
	align-items: center;
}

.items-end {
	align-items: flex-end;
}

.justify-start {
	justify-content: flex-start;
}

.justify-center {
	justify-content: center;
}

.justify-end {
	justify-content: flex-end;
}

.justify-between {
	justify-content: space-between;
}

.justify-around {
	justify-content: space-around;
}

.justify-evenly {
	justify-content: space-evenly;
}

// Width Utilities
.w-full {
	width: 100%;
}

.w-screen {
	width: 100vw;
}

.w-auto {
	width: auto;
}

// Height Utilities
.h-20 {
	height: 20vh;
}

.h-40 {
	height: 40vh;
}

.h-full {
	height: 100%;
}

.h-screen {
	height: 100vh;
}

.h-auto {
	height: auto;
}

.h-fit {
	height: fit-content;
}

// Shadows
.shadow-sm {
	box-shadow: 4px 4px 0 $shadow-color;
}

.shadow-md {
	box-shadow: 6px 6px 0 $shadow-color;
}

.shadow-lg {
	box-shadow: 8px 8px 0 $shadow-color;
}

.shadow-pixel {
	box-shadow: $pixel-shadow;
}

.shadow-inset {
	box-shadow: $inset-shadow;
}

.shadow-glow {
	box-shadow: $retro-glow;
}

// Grid Utilities
.grid {
	display: grid;
}

@for $i from 1 through 6 {
	.grid-cols-#{$i} {
		@include grid-template(columns, $i);
	}

	.grid-rows-#{$i} {
		@include grid-template(rows, $i);
	}
}

.grid-cols-none {
	grid-template-columns: none;
}

.grid-rows-none {
	grid-template-rows: none;
}

// Col spans
@for $i from 1 through 3 {
	.col-span-#{$i} {
		@include col-span($i);
	}
}

// Gap Utilities
$gap-sizes: (
	0.25rem,
	0.5rem,
	0.75rem,
	1rem,
	1.25rem,
	1.5rem,
	2rem,
	2.5rem,
	3rem
);

@each $size, $index in $gap-sizes {
	.gap-#{$index + 1} {
		@include gap($size);
	}
}

// Padding Utilities
@for $i from 0 through 12 {
	.p-#{$i} {
		@include spacing(padding, $i * 0.25rem);
	}

	.py-#{$i} {
		padding-top: $i * 0.25rem;
		padding-bottom: $i * 0.25rem;
	}

	.px-#{$i} {
		padding-left: $i * 0.25rem;
		padding-right: $i * 0.25rem;
	}

	.pt-#{$i} {
		padding-top: $i * 0.25rem;
	}

	.pb-#{$i} {
		padding-bottom: $i * 0.25rem;
	}
}

// Margin Utilities
@for $i from 1 through 12 {
	.m-#{$i} {
		@include spacing(margin, $i * 0.25rem);
	}
}

// Width
@for $i from 2 through 8 {
	.w-#{$i} {
		width: #{$i}rem;
	}
}

// Height
@for $i from 2 through 8 {
	.h-#{$i} {
		height: #{$i}rem;
	}
}

// Border
.b-0 {
	border: none;
}

.border {
	border: $pixel-border-width solid $border-color;
}

.border-primary {
	border: $pixel-border-width solid $primary-color;
}

.border-secondary {
	border: $pixel-border-width solid $secondary-color;
}

.border-tertiary {
	border: $pixel-border-width solid $tertiary-color;
}

.border-dashed {
	border-style: dashed;
}

.border-dotted {
	border-style: dotted;
}

.pixel-bg {
	background-image:
		linear-gradient(to right, transparent 50%, rgba($border-color, 0.1) 50%),
		linear-gradient(to bottom, transparent 50%, rgba($border-color, 0.1) 50%);
	background-size: 4px 4px;
}

// Button
.btn {
	padding: $padding;
	border-radius: $border-radius;
	border: $pixel-border-width solid;
	cursor: pointer;
	font-family: 'Courier New', monospace;
	transition: all 0.2s ease;
	position: relative;
	box-shadow: $pixel-shadow;

	&.btn-primary {
		background-color: $background-color;
		color: $primary-color;
		border-color: $primary-color;

		&:hover {
			background-color: $primary-color;
			color: $background-color;
			transform: translate(-2px, -2px);
			box-shadow: 6px 6px 0 $shadow-color;
		}

		&:active {
			transform: translate(0px, 0px);
			box-shadow: 2px 2px 0 $shadow-color;
		}
	}

	&.btn-secondary {
		background-color: $background-color;
		color: $secondary-color;
		border-color: $secondary-color;


		&:active {
			transform: translate(0px, 0px);
			box-shadow: 2px 2px 0 $shadow-color;
		}
	}

	&.btn-tertiary {
		background-color: $background-color;
		color: $tertiary-color;
		border-color: $tertiary-color;

		&:active {
			transform: translate(0px, 0px);
			box-shadow: 2px 2px 0 $shadow-color;
		}
	}
}

// Background Colors
.bg {
	background-color: $background-color;
}

.bg-primary {
	background-color: $primary-color;
	color: $background-color;
}

.bg-secondary {
	background-color: $secondary-color;
	color: $background-color;
}

.bg-tertiary {
	background-color: $tertiary-color;
	color: $background-color;
}

.bg-glass {
	background-color: $glass-background;
	backdrop-filter: blur($glass-blur);
	border: 2px solid $border-color;
}

// Text Colors
.text-primary {
	color: $primary-color;
}

.text-secondary {
	color: $secondary-color;
}

.text-tertiary {
	color: $tertiary-color;
}

.text-accent {
	color: $border-color;
}


.text-pixel {
	font-family: 'Courier New', monospace;
	letter-spacing: 1px;
	font-weight: bold;
}

// Text Sizes
.text-small {
	font-size: 0.75rem;
}

.text-medium {
	font-size: 1rem;
}

.text-large {
	font-size: 1.25rem;
}

.text-xl {
	font-size: 1.5rem;
}

.text-2xl {
	font-size: 2rem;
}